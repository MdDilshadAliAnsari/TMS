// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TMS.Services.Model;

#nullable disable

namespace TMS.Services.Migrations
{
    [DbContext(typeof(TMSDbContext))]
    partial class TMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TMS")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TMS.Services.Model.AnalyticsPart1tDTO", b =>
                {
                    b.Property<string>("AvgTimeResolve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoofTask")
                        .HasColumnType("int");

                    b.ToTable("AnalyticsPart1tDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.AnalyticsPart2tDTO", b =>
                {
                    b.Property<int?>("Closed")
                        .HasColumnType("int");

                    b.Property<int?>("Hold")
                        .HasColumnType("int");

                    b.Property<int?>("Inprocess")
                        .HasColumnType("int");

                    b.Property<int?>("New")
                        .HasColumnType("int");

                    b.Property<int?>("Resolved")
                        .HasColumnType("int");

                    b.ToTable("AnalyticsPart2tDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.AnalyticsPart3tDTO", b =>
                {
                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AnalyticsPart3tDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.AnalyticsPart5tDTO", b =>
                {
                    b.Property<string>("labels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ticketSolved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ticketsunResolved")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AnalyticsPart5tDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.AssignmentDetailDto", b =>
                {
                    b.Property<string>("AssignmentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AssignmentDetailDto", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.Comment", b =>
                {
                    b.Property<int?>("COMMENTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("COMMENTID"));

                    b.Property<string>("COMMENTTEXT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<int?>("TASKID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("USERID")
                        .HasColumnType("int");

                    b.HasKey("COMMENTID");

                    b.ToTable("COMMENTS", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.DashboardPart1TO4tDTO", b =>
                {
                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DashboardPart1TO4tDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.DashboardPart1tDTO", b =>
                {
                    b.Property<string>("Closed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerSatisfaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstResponseTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullResoltuionTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InProgress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("New")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResoltuionInFirstCall")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolved")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TodayTicket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DashboardPart1tDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.DashboardPart5DTO", b =>
                {
                    b.Property<string>("labels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DashboardPart5DTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.DashboardPart6DTO", b =>
                {
                    b.Property<string>("ticketsSubmitted")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DashboardPart6DTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.DashboardPart7DTO", b =>
                {
                    b.Property<string>("ticketsSolved")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DashboardPart7DTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.DeleteTaskIdDTO", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.ToTable("DeleteTaskIdDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.Document", b =>
                {
                    b.Property<int?>("DOCUMENTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("DOCUMENTID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DOCUMENTURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<int?>("PROJECTID")
                        .HasColumnType("int");

                    b.Property<int?>("TASKID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TASKSSTATUSID")
                        .HasColumnType("int");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("DOCUMENTID");

                    b.ToTable("DOCUMENTS", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.HQDTO", b =>
                {
                    b.Property<string>("CustomerData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeveloperData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Incoming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LasthourIncoming")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LasthourOutgoing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LatestTaskData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outgoing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnassignedData")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("HQDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.Project", b =>
                {
                    b.Property<int?>("PROJECTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PROJECTID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ENDDATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<string>("PROJECTNAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("STARTDATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("PROJECTID");

                    b.ToTable("PROJECTS", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.ProjectAssignment", b =>
                {
                    b.Property<int?>("PROJECTASSIGNMENTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("PROJECTASSIGNMENTID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<int?>("PROJECTID")
                        .HasColumnType("int");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("USERID")
                        .HasColumnType("int");

                    b.HasKey("PROJECTASSIGNMENTID");

                    b.ToTable("PROJECTASSIGNMENT", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.STATUS", b =>
                {
                    b.Property<int?>("STATUSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("STATUSID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("STATUSID");

                    b.ToTable("STATUS", "TMS");

                    b.HasData(
                        new
                        {
                            STATUSID = 1,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "This task is new",
                            ISDELETED = 0,
                            NAME = "New",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            STATUSID = 2,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "This task is in Progress.",
                            ISDELETED = 0,
                            NAME = "In Progress",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            STATUSID = 3,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "This task resolved in Developement Environment",
                            ISDELETED = 0,
                            NAME = "Resolved",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            STATUSID = 4,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "This task already Closed.",
                            ISDELETED = 0,
                            NAME = "Closed",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TMS.Services.Model.TASKCATEGORY", b =>
                {
                    b.Property<int?>("TASKCATEGORYID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKCATEGORYID"));

                    b.Property<string>("CATCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("TASKCATEGORYID");

                    b.ToTable("TASKCATEGORY", "TMS");

                    b.HasData(
                        new
                        {
                            TASKCATEGORYID = 1,
                            CATCODE = "BDE",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "A flaw in the software or system that causes incorrect or unexpected behavior",
                            ISDELETED = 0,
                            NAME = "Bug / Defect",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 2,
                            CATCODE = "FER",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "A suggestion to add new functionality or improve existing features.",
                            ISDELETED = 0,
                            NAME = "Feature Request",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 3,
                            CATCODE = "TES",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "Help with resolving technical problems, including hardware, software, or network issues",
                            ISDELETED = 0,
                            NAME = "Technical Support",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 4,
                            CATCODE = "SRT",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "A formal request for something standard (e.g., access, install, information).",
                            ISDELETED = 0,
                            NAME = "Service Request - Technical",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 5,
                            CATCODE = "SRD",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "A formal request for something standard (e.g., access, install, information).",
                            ISDELETED = 0,
                            NAME = "Service Request - Documentation",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 6,
                            CATCODE = "SRM",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "A formal request for something Major (e.g., Business logic changes).",
                            ISDELETED = 0,
                            NAME = "Service Request Major",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 7,
                            CATCODE = "INC",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "An unplanned interruption to a service or a reduction in service quality.",
                            ISDELETED = 0,
                            NAME = "Incident",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 8,
                            CATCODE = "ACS",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "User cannot access a system, file, or application.",
                            ISDELETED = 0,
                            NAME = "Access / Permission Issue",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 9,
                            CATCODE = "ACI",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "Login problems, password resets, locked accounts.",
                            ISDELETED = 0,
                            NAME = "Account Issues",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 10,
                            CATCODE = "PFI",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "System/application is slow or unresponsive.",
                            ISDELETED = 0,
                            NAME = "Performance Issue",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKCATEGORYID = 11,
                            CATCODE = "UIX",
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "Non-critical feedback about the interface or usability.",
                            ISDELETED = 0,
                            NAME = "UI / UX Feedback",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TMS.Services.Model.TASKEMAILATTACHMENT", b =>
                {
                    b.Property<int?>("TASKEMAILATTACHMENTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKEMAILATTACHMENTID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TASKID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TASKEMAILATTACHMENTID");

                    b.ToTable("TASKEMAILATTACHMENT", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.TASKSPRIORITY", b =>
                {
                    b.Property<int?>("TASKSPRIORITYID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKSPRIORITYID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("TASKSPRIORITYID");

                    b.ToTable("TASKSPRIORITY", "TMS");

                    b.HasData(
                        new
                        {
                            TASKSPRIORITYID = 1,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "Low Priority",
                            ISDELETED = 0,
                            NAME = "LOW",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKSPRIORITYID = 2,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "Medium Priority.",
                            ISDELETED = 0,
                            NAME = "Medium",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKSPRIORITYID = 3,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "High Priority",
                            ISDELETED = 0,
                            NAME = "Hign",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TASKSPRIORITYID = 4,
                            CREATEDBY = 1,
                            CREATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DESCRIPTION = "Critical  Priority.",
                            ISDELETED = 0,
                            NAME = "Critical",
                            UPDATEDBY = 1,
                            UPDATEDON = new DateTime(2025, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TMS.Services.Model.TaskAssign", b =>
                {
                    b.Property<int?>("TASKASSIGNID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKASSIGNID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<int?>("TASKID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WHICHDEVELOPERASSIGNED")
                        .HasColumnType("int");

                    b.Property<int?>("WHOASSIGNED")
                        .HasColumnType("int");

                    b.HasKey("TASKASSIGNID");

                    b.ToTable("ASSIGNOPERATION", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.TaskEmail", b =>
                {
                    b.Property<int?>("TASKEMAILID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKEMAILID"));

                    b.Property<string>("BODYCONTENT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BODYCONTENTTYPE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCRECIPIENTEMAILADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("FROMEMAILADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<string>("SENDEREMAILADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SUBJECT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TASKID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TORECIPIENTEMAILADDRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("TASKEMAILID");

                    b.ToTable("TASKEMAIL", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.Tassk", b =>
                {
                    b.Property<int?>("TASKID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DUEDATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<int?>("PROJECTID")
                        .HasColumnType("int");

                    b.Property<int?>("TASKCATEGORYID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TASKSPRIORITYID")
                        .HasColumnType("int");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.Property<int?>("USERID")
                        .HasColumnType("int");

                    b.HasKey("TASKID");

                    b.ToTable("TASKS", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.TasskStatus", b =>
                {
                    b.Property<int?>("TASKSSTATUSID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("TASKSSTATUSID"));

                    b.Property<int?>("CREATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CREATEDON")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ISDELETED")
                        .HasColumnType("int");

                    b.Property<int?>("STATUSID")
                        .HasColumnType("int");

                    b.Property<int?>("TASKCATEGORYID")
                        .HasColumnType("int");

                    b.Property<int?>("TASKID")
                        .HasColumnType("int");

                    b.Property<int?>("TASKPRIORITYID")
                        .HasColumnType("int");

                    b.Property<string>("TASKSERIALNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UPDATEDBY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATEDON")
                        .HasColumnType("datetime2");

                    b.HasKey("TASKSSTATUSID");

                    b.ToTable("TASKSTATUS", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.TeamFeed", b =>
                {
                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("TEAMFEEDS", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.UserEmailResultDTO", b =>
                {
                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserEmailResultDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.UserIdResultDTO", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.ToTable("UserIdResultDTO", "TMS");
                });

            modelBuilder.Entity("TMS.Services.Model.UserNameResultDTO", b =>
                {
                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserNameResultDTO", "TMS");
                });
#pragma warning restore 612, 618
        }
    }
}
